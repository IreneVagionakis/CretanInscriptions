<?xml version="1.0" encoding="utf-8"?>
<map:sitemap xmlns:map="http://apache.org/cocoon/sitemap/1.0">

  <!-- kiln sitemap for handling Sesame harvesting and querying.

       These matches generate their initial content by calling Cocoon
       matches in the local URL space
       (cocoon://admin/rdf/**). "generate/" is used as the relative
       root for matches that generate RDF documents; "construct/" is
       used for matches that construct queries.

       These matches are expected to be called from a Cocoon match in
       the local URL space (typically cocoon://admin/rdf/**, but it
       may be anywhere).

       The contexts parameter passed to the Sesame transformer is used
       here as an identifier of the source document(s) of the triples
       being added/cleared. This allows for a harvest process that
       first clears out any previously added triples relating to the
       source document(s) and then adds the newly generated triples.

  -->
  <map:pipelines>
    <map:pipeline id="kiln-sesame" internal-only="true">

      <!-- Harvest an RDF/XML document into Sesame. First deletes
           statements in the supplied context, then adds those from
           the RDF/XML document with the same context. -->
      <map:match pattern="harvest/**.xml">
        <map:aggregate element="response">
          <map:part element="clear" src="cocoon:/clear/{1}.xml" />
          <map:part element="add" src="cocoon:/add/{1}.xml" />
        </map:aggregate>
        <map:serialize type="xml" />
      </map:match>

      <!-- Add statements from an RDF/XML document to Sesame. -->
      <map:match pattern="add/**.xml">
        <map:generate src="cocoon://admin/rdf/generate/{1}.xml" />
        <map:transform type="sesame">
          <map:parameter name="url" value="{global:sesame-server}" />
          <map:parameter name="repository"
                         value="{global:sesame-server-repository}" />
          <map:parameter name="action" value="add" />
          <map:parameter name="contexts" value="{global:rdf-base-uri}{1}" />
        </map:transform>
        <map:serialize type="xml" />
      </map:match>

      <!-- Clear all statements within a specified context from the
           RDF store. -->
      <map:match pattern="clear/**.xml">
        <map:generate src="empty:empty" />
        <map:transform type="sesame">
          <map:parameter name="url" value="{global:sesame-server}" />
          <map:parameter name="repository"
                         value="{global:sesame-server-repository}" />
          <map:parameter name="action" value="clear" />
          <map:parameter name="contexts" value="{global:rdf-base-uri}{1}" />
        </map:transform>
        <map:serialize type="xml" />
      </map:match>

      <!-- Perform a SPARQL Graph Query (ie, using CONSTRUCT). The
           source XML document must consist solely of a root element
           and text content describing the query. -->
      <map:match pattern="query/graph/**.xml">
        <map:generate src="cocoon://admin/rdf/construct/graph/{1}.xml" />
        <map:transform type="sesame">
          <map:parameter name="url" value="{global:sesame-server}" />
          <map:parameter name="repository"
                         value="{global:sesame-server-repository}" />
          <map:parameter name="action" value="graph-query" />
          <map:parameter name="base-uri" value="{global:rdf-base-uri}" />
        </map:transform>
        <map:serialize type="rdf-xml" />
      </map:match>

    </map:pipeline>
  </map:pipelines>
</map:sitemap>
